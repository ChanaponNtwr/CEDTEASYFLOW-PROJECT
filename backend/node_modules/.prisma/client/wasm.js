
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  fname: 'fname',
  lname: 'lname',
  name: 'name',
  email: 'email',
  createdAt: 'createdAt',
  image: 'image'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  access_token: 'access_token',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  expires_at: 'expires_at'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.PackageScalarFieldEnum = {
  packageId: 'packageId',
  packageName: 'packageName',
  duration: 'duration',
  seats: 'seats',
  price: 'price'
};

exports.Prisma.ClassScalarFieldEnum = {
  classId: 'classId',
  classname: 'classname',
  createAt: 'createAt'
};

exports.Prisma.PackageClassScalarFieldEnum = {
  packageClassId: 'packageClassId',
  classId: 'classId',
  packageId: 'packageId',
  purchasedAt: 'purchasedAt',
  startDate: 'startDate',
  endDate: 'endDate'
};

exports.Prisma.LabScalarFieldEnum = {
  labId: 'labId',
  ownerUserId: 'ownerUserId',
  labname: 'labname',
  problemSolving: 'problemSolving',
  inSymVal: 'inSymVal',
  outSymVal: 'outSymVal',
  declareSymVal: 'declareSymVal',
  assignSymVal: 'assignSymVal',
  ifSymVal: 'ifSymVal',
  forSymVal: 'forSymVal',
  whileSymVal: 'whileSymVal',
  createAt: 'createAt',
  dueDate: 'dueDate',
  status: 'status'
};

exports.Prisma.ClassLabsScalarFieldEnum = {
  classId: 'classId',
  labId: 'labId'
};

exports.Prisma.TestcaseScalarFieldEnum = {
  testcaseId: 'testcaseId',
  labId: 'labId',
  inputVal: 'inputVal',
  outputVal: 'outputVal',
  inHiddenVal: 'inHiddenVal',
  outHiddenVal: 'outHiddenVal',
  score: 'score'
};

exports.Prisma.SubmissionScalarFieldEnum = {
  userId: 'userId',
  labId: 'labId',
  testcaseId: 'testcaseId',
  status: 'status',
  createAt: 'createAt'
};

exports.Prisma.UserClassScalarFieldEnum = {
  userId: 'userId',
  classId: 'classId',
  roleId: 'roleId'
};

exports.Prisma.RoleScalarFieldEnum = {
  roleId: 'roleId',
  roleName: 'roleName'
};

exports.Prisma.NotificationScalarFieldEnum = {
  notiId: 'notiId',
  userId: 'userId',
  message: 'message',
  createAt: 'createAt'
};

exports.Prisma.FlowchartScalarFieldEnum = {
  flowchartId: 'flowchartId',
  userId: 'userId',
  labId: 'labId',
  createdAt: 'createdAt',
  content: 'content'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  Package: 'Package',
  Class: 'Class',
  PackageClass: 'PackageClass',
  Lab: 'Lab',
  ClassLabs: 'ClassLabs',
  Testcase: 'Testcase',
  Submission: 'Submission',
  UserClass: 'UserClass',
  Role: 'Role',
  Notification: 'Notification',
  Flowchart: 'Flowchart'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\09Nat\\Documents\\GitHub\\CEDTEASYFLOW-PROJECT\\backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\09Nat\\Documents\\GitHub\\CEDTEASYFLOW-PROJECT\\backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id            Int            @id @default(autoincrement())\n  fname         String?\n  lname         String?\n  name          String?\n  email         String         @unique\n  createdAt     DateTime       @default(now())\n  image         String?\n  accounts      Account[]\n  flowcharts    Flowchart[]\n  labs          Lab[]          @relation(\"OwnerLabs\")\n  notifications Notification[]\n  sessions      Session[]\n  submissions   Submission[]\n  userClasses   UserClass[]\n}\n\nmodel Account {\n  id                Int     @id @default(autoincrement())\n  userId            Int\n  type              String\n  provider          String\n  providerAccountId String\n  access_token      String?\n  token_type        String?\n  scope             String?\n  id_token          String?\n  expires_at        Int?\n  user              User    @relation(fields: [userId], references: [id])\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel Session {\n  id           Int      @id @default(autoincrement())\n  sessionToken String   @unique\n  userId       Int\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id])\n}\n\nmodel Package {\n  packageId      Int            @id @default(autoincrement())\n  packageName    String\n  duration       Int\n  seats          Int\n  price          Decimal\n  packageClasses PackageClass[]\n}\n\nmodel Class {\n  classId        Int            @id @default(autoincrement())\n  classname      String\n  createAt       DateTime       @default(now())\n  classLabs      ClassLabs[]\n  packageClasses PackageClass[]\n  userClasses    UserClass[]\n}\n\nmodel PackageClass {\n  packageClassId Int      @id @default(autoincrement())\n  classId        Int\n  packageId      Int\n  purchasedAt    DateTime\n  startDate      DateTime\n  endDate        DateTime\n  class          Class    @relation(fields: [classId], references: [classId])\n  package        Package  @relation(fields: [packageId], references: [packageId])\n}\n\nmodel Lab {\n  labId          Int          @id @default(autoincrement())\n  ownerUserId    Int\n  labname        String\n  problemSolving String\n  inSymVal       Int          @default(0)\n  outSymVal      Int          @default(0)\n  declareSymVal  Int          @default(0)\n  assignSymVal   Int          @default(0)\n  ifSymVal       Int          @default(0)\n  forSymVal      Int          @default(0)\n  whileSymVal    Int          @default(0)\n  createAt       DateTime     @default(now())\n  dueDate        DateTime?\n  status         String       @default(\"active\")\n  classLabs      ClassLabs[]\n  flowcharts     Flowchart[]\n  owner          User         @relation(\"OwnerLabs\", fields: [ownerUserId], references: [id])\n  submissions    Submission[]\n  testcases      Testcase[]\n}\n\nmodel ClassLabs {\n  classId Int\n  labId   Int\n  class   Class @relation(fields: [classId], references: [classId])\n  lab     Lab   @relation(fields: [labId], references: [labId])\n\n  @@id([classId, labId])\n}\n\nmodel Testcase {\n  testcaseId   Int          @id @default(autoincrement())\n  labId        Int\n  inputVal     String\n  outputVal    String\n  inHiddenVal  String?\n  outHiddenVal String?\n  score        Int\n  submissions  Submission[]\n  lab          Lab          @relation(fields: [labId], references: [labId])\n}\n\nmodel Submission {\n  userId     Int\n  labId      Int\n  testcaseId Int\n  status     String\n  createAt   DateTime @default(now())\n  lab        Lab      @relation(fields: [labId], references: [labId])\n  testcase   Testcase @relation(fields: [testcaseId], references: [testcaseId])\n  user       User     @relation(fields: [userId], references: [id])\n\n  @@id([userId, labId, testcaseId])\n}\n\nmodel UserClass {\n  userId  Int\n  classId Int\n  roleId  Int\n  class   Class @relation(fields: [classId], references: [classId])\n  role    Role  @relation(fields: [roleId], references: [roleId])\n  user    User  @relation(fields: [userId], references: [id])\n\n  @@id([userId, classId])\n}\n\nmodel Role {\n  roleId      Int         @id @default(autoincrement())\n  roleName    String\n  userClasses UserClass[]\n}\n\nmodel Notification {\n  notiId   Int      @id @default(autoincrement())\n  userId   Int\n  message  String\n  createAt DateTime @default(now())\n  user     User     @relation(fields: [userId], references: [id])\n}\n\nmodel Flowchart {\n  flowchartId Int      @id @default(autoincrement())\n  userId      Int\n  labId       Int\n  createdAt   DateTime @default(now())\n  content     Json\n  lab         Lab      @relation(fields: [labId], references: [labId])\n  user        User     @relation(fields: [userId], references: [id])\n}\n",
  "inlineSchemaHash": "c01dd57026787fd7d067330428df16bc7e5e7e72879de8195abe9ac009c15c16",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"flowcharts\",\"kind\":\"object\",\"type\":\"Flowchart\",\"relationName\":\"FlowchartToUser\"},{\"name\":\"labs\",\"kind\":\"object\",\"type\":\"Lab\",\"relationName\":\"OwnerLabs\"},{\"name\":\"notifications\",\"kind\":\"object\",\"type\":\"Notification\",\"relationName\":\"NotificationToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"Submission\",\"relationName\":\"SubmissionToUser\"},{\"name\":\"userClasses\",\"kind\":\"object\",\"type\":\"UserClass\",\"relationName\":\"UserToUserClass\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"Package\":{\"fields\":[{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"packageName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"seats\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"packageClasses\",\"kind\":\"object\",\"type\":\"PackageClass\",\"relationName\":\"PackageToPackageClass\"}],\"dbName\":null},\"Class\":{\"fields\":[{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"classname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"classLabs\",\"kind\":\"object\",\"type\":\"ClassLabs\",\"relationName\":\"ClassToClassLabs\"},{\"name\":\"packageClasses\",\"kind\":\"object\",\"type\":\"PackageClass\",\"relationName\":\"ClassToPackageClass\"},{\"name\":\"userClasses\",\"kind\":\"object\",\"type\":\"UserClass\",\"relationName\":\"ClassToUserClass\"}],\"dbName\":null},\"PackageClass\":{\"fields\":[{\"name\":\"packageClassId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"packageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"purchasedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"ClassToPackageClass\"},{\"name\":\"package\",\"kind\":\"object\",\"type\":\"Package\",\"relationName\":\"PackageToPackageClass\"}],\"dbName\":null},\"Lab\":{\"fields\":[{\"name\":\"labId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ownerUserId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"labname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"problemSolving\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inSymVal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"outSymVal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"declareSymVal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assignSymVal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"ifSymVal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"forSymVal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"whileSymVal\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"classLabs\",\"kind\":\"object\",\"type\":\"ClassLabs\",\"relationName\":\"ClassLabsToLab\"},{\"name\":\"flowcharts\",\"kind\":\"object\",\"type\":\"Flowchart\",\"relationName\":\"FlowchartToLab\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OwnerLabs\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"Submission\",\"relationName\":\"LabToSubmission\"},{\"name\":\"testcases\",\"kind\":\"object\",\"type\":\"Testcase\",\"relationName\":\"LabToTestcase\"}],\"dbName\":null},\"ClassLabs\":{\"fields\":[{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"labId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"ClassToClassLabs\"},{\"name\":\"lab\",\"kind\":\"object\",\"type\":\"Lab\",\"relationName\":\"ClassLabsToLab\"}],\"dbName\":null},\"Testcase\":{\"fields\":[{\"name\":\"testcaseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"labId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"inputVal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"outputVal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inHiddenVal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"outHiddenVal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"submissions\",\"kind\":\"object\",\"type\":\"Submission\",\"relationName\":\"SubmissionToTestcase\"},{\"name\":\"lab\",\"kind\":\"object\",\"type\":\"Lab\",\"relationName\":\"LabToTestcase\"}],\"dbName\":null},\"Submission\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"labId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"testcaseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lab\",\"kind\":\"object\",\"type\":\"Lab\",\"relationName\":\"LabToSubmission\"},{\"name\":\"testcase\",\"kind\":\"object\",\"type\":\"Testcase\",\"relationName\":\"SubmissionToTestcase\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SubmissionToUser\"}],\"dbName\":null},\"UserClass\":{\"fields\":[{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"classId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"class\",\"kind\":\"object\",\"type\":\"Class\",\"relationName\":\"ClassToUserClass\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserClass\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserClass\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"roleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"roleName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userClasses\",\"kind\":\"object\",\"type\":\"UserClass\",\"relationName\":\"RoleToUserClass\"}],\"dbName\":null},\"Notification\":{\"fields\":[{\"name\":\"notiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"NotificationToUser\"}],\"dbName\":null},\"Flowchart\":{\"fields\":[{\"name\":\"flowchartId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"labId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lab\",\"kind\":\"object\",\"type\":\"Lab\",\"relationName\":\"FlowchartToLab\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FlowchartToUser\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

